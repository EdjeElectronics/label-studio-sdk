imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /api/ml/
      method: GET
      auth: true
      docs: >

        List all configured ML backends for a specific project by ID.

        Use the following cURL command:

        ```bash

        curl https://localhost:8080/api/ml?project={project_id} -H
        'Authorization: Token abc123'
      display-name: List ML backends
      request:
        name: MlListRequest
        query-parameters:
          project:
            type: optional<integer>
            docs: Project ID
      response:
        docs: ''
        type: list<root.MlBackend>
      examples:
        - response:
            body:
              - id: 1
                state: CO
                readable_state: readable_state
                is_interactive: true
                url: url
                error_message: error_message
                title: title
                auth_method: NONE
                basic_auth_user: basic_auth_user
                basic_auth_pass: basic_auth_pass
                basic_auth_pass_is_set: basic_auth_pass_is_set
                description: description
                extra_params:
                  extra_params:
                    key: value
                model_version: model_version
                timeout: 1.1
                created_at: '2024-01-15T09:30:00Z'
                updated_at: '2024-01-15T09:30:00Z'
                auto_update: true
                project: 1
    create:
      path: /api/ml/
      method: POST
      auth: true
      docs: >

        Add an ML backend to a project using the Label Studio UI or by sending a
        POST request using the following cURL 

        command:

        ```bash

        curl -X POST -H 'Content-type: application/json'
        https://localhost:8080/api/ml -H 'Authorization: Token abc123'\

        --data '{"url": "http://localhost:9090", "project": {project_id}}' 
      display-name: Add ML Backend
      request:
        name: MlCreateRequest
        body:
          properties:
            url:
              type: optional<string>
              docs: ML backend URL
            project:
              type: optional<integer>
              docs: Project ID
            is_interactive:
              type: optional<boolean>
              docs: Is interactive
            title:
              type: optional<string>
              docs: Title
            description:
              type: optional<string>
              docs: Description
            auth_method:
              type: optional<MlCreateRequestAuthMethod>
              docs: Auth method
            basic_auth_user:
              type: optional<string>
              docs: Basic auth user
            basic_auth_pass:
              type: optional<string>
              docs: Basic auth password
            extra_params:
              type: optional<map<string, unknown>>
              docs: Extra parameters
            timeout:
              type: optional<integer>
              docs: Response model timeout
      response:
        docs: ''
        type: MlCreateResponse
      examples:
        - request: {}
          response:
            body:
              url: url
              project: 1
              is_interactive: true
              title: title
              description: description
              auth_method: NONE
              basic_auth_user: basic_auth_user
              basic_auth_pass: basic_auth_pass
              extra_params:
                extra_params:
                  key: value
              timeout: 1
    get:
      path: /api/ml/{id}
      method: GET
      auth: true
      docs: >

        Get details about a specific ML backend connection by ID. For example,
        make a GET request using the

        following cURL command:

        ```bash

        curl https://localhost:8080/api/ml/{ml_backend_ID} -H 'Authorization:
        Token abc123'
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this ml backend.
      display-name: Get ML Backend
      response:
        docs: ''
        type: root.MlBackend
      examples:
        - path-parameters:
            id: 1
          response:
            body:
              id: 1
              state: CO
              readable_state: readable_state
              is_interactive: true
              url: url
              error_message: error_message
              title: title
              auth_method: NONE
              basic_auth_user: basic_auth_user
              basic_auth_pass: basic_auth_pass
              basic_auth_pass_is_set: basic_auth_pass_is_set
              description: description
              extra_params:
                extra_params:
                  key: value
              model_version: model_version
              timeout: 1.1
              created_at: '2024-01-15T09:30:00Z'
              updated_at: '2024-01-15T09:30:00Z'
              auto_update: true
              project: 1
    delete:
      path: /api/ml/{id}
      method: DELETE
      auth: true
      docs: >

        Remove an existing ML backend connection by ID. For example, use the

        following cURL command:

        ```bash

        curl -X DELETE https://localhost:8080/api/ml/{ml_backend_ID} -H
        'Authorization: Token abc123'
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this ml backend.
      display-name: Remove ML Backend
      examples:
        - path-parameters:
            id: 1
    update:
      path: /api/ml/{id}
      method: PATCH
      auth: true
      docs: >

        Update ML backend parameters using the Label Studio UI or by sending a
        PATCH request using the following cURL command:

        ```bash

        curl -X PATCH -H 'Content-type: application/json'
        https://localhost:8080/api/ml/{ml_backend_ID} -H 'Authorization: Token
        abc123'\

        --data '{"url": "http://localhost:9091"}' 
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this ml backend.
      display-name: Update ML Backend
      request:
        name: MlUpdateRequest
        body:
          properties:
            url:
              type: optional<string>
              docs: ML backend URL
            project:
              type: optional<integer>
              docs: Project ID
            is_interactive:
              type: optional<boolean>
              docs: Is interactive
            title:
              type: optional<string>
              docs: Title
            description:
              type: optional<string>
              docs: Description
            auth_method:
              type: optional<MlUpdateRequestAuthMethod>
              docs: Auth method
            basic_auth_user:
              type: optional<string>
              docs: Basic auth user
            basic_auth_pass:
              type: optional<string>
              docs: Basic auth password
            extra_params:
              type: optional<map<string, unknown>>
              docs: Extra parameters
            timeout:
              type: optional<integer>
              docs: Response model timeout
      response:
        docs: ''
        type: MlUpdateResponse
      examples:
        - path-parameters:
            id: 1
          request: {}
          response:
            body:
              url: url
              project: 1
              is_interactive: true
              title: title
              description: description
              auth_method: NONE
              basic_auth_user: basic_auth_user
              basic_auth_pass: basic_auth_pass
              extra_params:
                extra_params:
                  key: value
              timeout: 1
    predict_interactive:
      path: /api/ml/{id}/interactive-annotating
      method: POST
      auth: true
      docs: >

        Send a request to the machine learning backend set up to be used for
        interactive preannotations to retrieve a

        predicted region based on annotator input. 

        See [set up machine
        learning](https://labelstud.io/guide/ml.html#Get-interactive-preannotations)
        for more.
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this ML backend.
      display-name: Request Interactive Annotation
      request:
        name: MlInteractiveAnnotatingRequest
        body:
          properties:
            task:
              type: integer
              docs: ID of task to annotate
            context:
              type: optional<map<string, unknown>>
              docs: Context for ML model
      examples:
        - path-parameters:
            id: 1
          request:
            task: 1
    train:
      path: /api/ml/{id}/train
      method: POST
      auth: true
      docs: >

        After you add an ML backend, call this API with the ML backend ID to
        start training with 

        already-labeled tasks. 


        Get the ML backend ID by [listing the ML backends for a
        project](https://labelstud.io/api/#operation/api_ml_list).
      path-parameters:
        id:
          type: integer
          docs: A unique integer value identifying this ML backend.
      display-name: Train
      request:
        name: MlTrainRequest
        body:
          properties:
            use_ground_truth:
              type: optional<boolean>
              docs: Whether to include ground truth annotations in training
      errors:
        - root.InternalServerError
      examples:
        - path-parameters:
            id: 1
          request: {}
    list_model_versions:
      path: /api/ml/{id}/versions
      method: GET
      auth: true
      docs: Get available versions of the model.
      path-parameters:
        id: string
      display-name: Get model versions
      examples:
        - path-parameters:
            id: id
types:
  MlCreateRequestAuthMethod:
    enum:
      - NONE
      - BASIC_AUTH
    docs: Auth method
  MlCreateResponseAuthMethod:
    enum:
      - NONE
      - BASIC_AUTH
    docs: Auth method
  MlCreateResponse:
    properties:
      url:
        type: optional<string>
        docs: ML backend URL
      project:
        type: optional<integer>
        docs: Project ID
      is_interactive:
        type: optional<boolean>
        docs: Is interactive
      title:
        type: optional<string>
        docs: Title
      description:
        type: optional<string>
        docs: Description
      auth_method:
        type: optional<MlCreateResponseAuthMethod>
        docs: Auth method
      basic_auth_user:
        type: optional<string>
        docs: Basic auth user
      basic_auth_pass:
        type: optional<string>
        docs: Basic auth password
      extra_params:
        type: optional<map<string, unknown>>
        docs: Extra parameters
      timeout:
        type: optional<integer>
        docs: Response model timeout
  MlUpdateRequestAuthMethod:
    enum:
      - NONE
      - BASIC_AUTH
    docs: Auth method
  MlUpdateResponseAuthMethod:
    enum:
      - NONE
      - BASIC_AUTH
    docs: Auth method
  MlUpdateResponse:
    properties:
      url:
        type: optional<string>
        docs: ML backend URL
      project:
        type: optional<integer>
        docs: Project ID
      is_interactive:
        type: optional<boolean>
        docs: Is interactive
      title:
        type: optional<string>
        docs: Title
      description:
        type: optional<string>
        docs: Description
      auth_method:
        type: optional<MlUpdateResponseAuthMethod>
        docs: Auth method
      basic_auth_user:
        type: optional<string>
        docs: Basic auth user
      basic_auth_pass:
        type: optional<string>
        docs: Basic auth password
      extra_params:
        type: optional<map<string, unknown>>
        docs: Extra parameters
      timeout:
        type: optional<integer>
        docs: Response model timeout
